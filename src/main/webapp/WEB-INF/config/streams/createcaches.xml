<createcaches
    xmlns="http://www.mmbase.org/xmlns/createcaches"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.mmbase.org/xmlns/createcaches http://www.mmbase.org/xmlns/createcaches.xsd"
    >

  <!--
     Example configuration: you will always need one recognizer and at least one transcoder.
     Transcoders can be on localhost but can call org.mmbase.util.CommandServer on a remote server
     to distribute tasks among multiple machines.
    -->
  <localhost max_simultaneous_transcoders="1"  stage="recognizer" />
  <localhost max_simultaneous_transcoders="1"  stage="transcoder" />
  <!--
  <server max_simultaneous_transcoders="2" host="someotherhost.org" port="1679" stage="transcoder" />
  -->

  <recognizer id="recognizer">
    <class name="org.mmbase.streams.transcoders.FFMpegRecognizer">
    </class>
    <loganalyzer name="org.mmbase.streams.transcoders.FFMpegAnalyzer">
      <param name="updateSource">true</param>
    </loganalyzer>
  </recognizer>

  <!-- v1 and v2 produce ogv and presume that FFMpeg2Theora is installed  -->
  <!-- <transcoder mimetype="video/*" id="v1">
    <class name="org.mmbase.streams.transcoders.FFMpeg2TheoraTranscoder">
      <param name="videoQuality">5</param>
      <param name="width">320</param>
    </class>
    <loganalyzer name="org.mmbase.streams.transcoders.FFMpeg2TheoraAnalyzer" />
  </transcoder> -->

  <!-- <transcoder mimetype="video/*"  id="v2">
    <class name="org.mmbase.streams.transcoders.FFMpeg2TheoraTranscoder">
      <param name="videoQuality">8</param>
    </class>
    <loganalyzer name="org.mmbase.streams.transcoders.FFMpeg2TheoraAnalyzer" />
  </transcoder> -->

  <!-- v4 produces an mp4 and only uses FFMpeg -->
  <transcoder
      label="lo"
      mimetype="video/*" id="v4">
    <class name="org.mmbase.streams.transcoders.FFMpegTranscoder">
      <param name="format">mp4</param>
      <param name="vcodec">libx264</param>
      <param name="vpre">default</param>
      <param name="framesPerSecond">25</param>
      <param name="bitrate">1024k</param>
      <param name="acodec">libfaac</param>
      <param name="abitrate">128k</param>
      <param name="audioChannels">2</param>
      <param name="async">1</param>
      <param name="-vf">scale=-1:288</param>
    </class>
    <loganalyzer name="org.mmbase.streams.transcoders.FFMpegAnalyzer" />
  </transcoder>

  <!-- example for vp8 -->
<!--
  <transcoder mimetype="video/*" id="v8">
    <class name="org.mmbase.streams.transcoders.FFMpegTranscoder">
      <param name="format">webm</param>
      <param name="vcodec">libvpx</param>
      <param name="bitrate">1024k</param>
      <param name="acodec">libvorbis</param>
      <param name="abitrate">128k</param>
      <param name="-ar">44100</param>
      <param name="-threads">0</param>
      <param name="audioChannels">2</param>
      <param name="async">1</param>
    </class>
    <loganalyzer name="org.mmbase.streams.transcoders.FFMpegAnalyzer" />
  </transcoder>
 -->

  <!-- example config for ts streams over cellular networks (for iPhone etc.) -->
<!--
  <transcoder
      label="lo"
      mimetype="video/*" id="v1">
    <class name="org.mmbase.streams.transcoders.FFMpegTranscoder">

      <param name="format">ts</param>
      <param name="forceFormat">mpegts</param>
      <param name="vcodec">libx264</param>
      <param name="framesPerSecond">25</param>
      <param name="bitrate">96k</param>
      <param name="acodec">libmp3lame</param>
      <param name="abitrate">48000</param>
      <param name="audioChannels">2</param>
      <param name="async">2</param>
      <param name="width">320</param>
      <param name="height">240</param>

      <param name="-flags">+loop</param>
      <param name="-cmp">+chroma</param>
      <param name="-partitions">+parti4x4+partp8x8+partb8x8</param>
      <param name="-subq">5</param>
      <param name="-trellis">1</param>
      <param name="-refs">1</param>
      <param name="-coder">0</param>
      <param name="-me_range">16</param>
      <param name="-keyint_min">25</param>
      <param name="-sc_threshold">40</param>
      <param name="-i_qfactor">0.71</param>
      <param name="-bt">200k</param>
      <param name="-maxrate">96k</param>
      <param name="-bufsize">96k</param>
      <param name="-rc_eq">'blurCplx^(1-qComp)'</param>
      <param name="-qcomp">0.6</param>
      <param name="-qmin">10</param>
      <param name="-qmax">51</param>
      <param name="-qdiff">4</param>
      <param name="-level">30</param>
      <param name="-aspect">320:240</param>
      <param name="-g">30</param>

    </class>
    <loganalyzer name="org.mmbase.streams.transcoders.FFMpegAnalyzer" />
  </transcoder>

  <transcoder
      label="lo"
      mimetype="video/*" in="v1" id="v2">
    <class name="org.mmbase.streams.transcoders.SegmenterTranscoder">
      <param name="format">ts</param>
      <param name="duration">10</param>
      <param name="httpPrefix">http://www.openimages.eu/</param>
    </class>
    <loganalyzer name="org.mmbase.streams.transcoders.SegmenterAnalyzer" />
  </transcoder>
 -->

  <!-- audio example producing an oga with FFMpeg -->
  <!-- <transcoder mimetype="audio/*" id="a1" in="recognizer">
    <class name="org.mmbase.streams.transcoders.FFMpegTranscoder">
      <param name="format">ogg</param>
      <param name="acodec">libvorbis</param>
      <param name="aq">32</param> 
      <param name="ab">192k</param>
    </class>
    <loganalyzer name="org.mmbase.streams.transcoders.FFMpegAnalyzer" />
  </transcoder> -->

  <!-- audio mp3: ffmpeg -i audio.wav -acodec libmp3lame -aq 32 -ab 192k audio.mp3 -->
  <transcoder mimetype="audio/*" id="a2" in="recognizer">
    <class name="org.mmbase.streams.transcoders.FFMpegTranscoder">
      <param name="format">mp3</param>
      <param name="acodec">libmp3lame</param>
      <param name="aq">32</param>
      <param name="ab">192k</param>
    </class>
    <loganalyzer name="org.mmbase.streams.transcoders.FFMpegAnalyzer" />
  </transcoder>

  <!-- InfiniteTranscoder is for testing purposes -->
  <!--
  <transcoder>
    <class name="org.mmbase.streams.transcoders.InfiniteTranscoder">

    </class>
  </transcoder>
  -->

</createcaches>
